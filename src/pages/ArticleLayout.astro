---
import type { CollectionEntry } from "astro:content";

const { entry, headings } = Astro.props as {
  entry: CollectionEntry<"articles">;
  headings?: Array<{ depth: number; slug: string; text: string }>;
};

const { data } = entry;
const dateFmt = (d: string) =>
  new Date(d).toLocaleDateString("de-DE", { year: "numeric", month: "long", day: "2-digit" });
---

<html lang="de">
  <head>
    <meta charset="utf-8" />
    <title>{data.title} · Articles</title>
    <meta name="description" content={data.description ?? ""} />
  </head>
  <body>
    <main class="wrap">
      <article class="post">
        <header class="post-head">
          <h1 class="title">{data.title}</h1>
          <div class="meta">
            <time datetime={data.date}>{dateFmt(data.date)}</time>
            {data.readingTime ? <span> · {data.readingTime} Min.</span> : null}
            {data.tags?.length ? (
              <ul class="tags">
                {data.tags.map((t) => <li class="tag">{t}</li>)}
              </ul>
            ) : null}
          </div>
          {data.cover ? (
            <img class="cover" src={data.cover} alt={data.title} loading="eager" decoding="async" />
          ) : null}
        </header>

        {headings && headings.length > 3 ? (
          <nav class="toc" aria-label="Inhaltsverzeichnis">
            <strong>Inhalt</strong>
            <ul>
              {headings
                .filter((h) => h.depth <= 3)
                .map((h) => (
                  <li class={`d${h.depth}`}>
                    <a href={`#${h.slug}`}>{h.text}</a>
                  </li>
                ))}
            </ul>
          </nav>
        ) : null}

        <slot />

      </article>
    </main>

    <style>
      .wrap { max-width: 900px; margin: 0 auto; padding: 1rem; }
      .title { font-size: clamp(1.8rem, 2.8vw, 2.6rem); line-height: 1.15; margin: .25rem 0 0.5rem; }
      .meta { color: #555; font-size: .95rem; display: flex; gap: .5rem; flex-wrap: wrap; align-items: center; }
      .tags { list-style: none; margin: .25rem 0 0; padding: 0; display: inline-flex; gap: .4rem; }
      .tag { background: #f2f2f2; border: 1px solid #e0e0e0; border-radius: 999px; padding: .1rem .5rem; font-size: .85rem; }
      .cover { width: 100%; height: auto; border-radius: 12px; margin: 1rem 0; object-fit: cover; }
      .toc { background: #fafafa; border: 1px solid #eee; border-radius: 10px; padding: .8rem 1rem; margin: 1rem 0 1.5rem; }
      .toc ul { margin: .5rem 0 0; padding-left: 1rem; }
      .toc li { margin: .25rem 0; }
      .toc .d2 { margin-left: .5rem; }
      .toc .d3 { margin-left: 1rem; }
      article :global(img) { max-width: 100%; height: auto; border-radius: 10px; }
      article :global(h2,h3) { scroll-margin-top: 80px; }
      @media (prefers-color-scheme: dark) {
        .meta { color: #cfcfcf; }
        .tag { background: #222; border-color: #333; }
        .toc { background: #171717; border-color: #2a2a2a; }
      }
    </style>
  </body>
</html>
